--- a/package/feeds/luci/luci-mod-network/htdocs/luci-static/resources/view/network/wireless.js
+++ b/package/feeds/luci/luci-mod-network/htdocs/luci-static/resources/view/network/wireless.js
@@ -882,7 +882,7 @@ return view.extend({
 				o = ss.taboption('general', CBIWifiFrequencyValue, '_freq', '<br />' + _('Operating frequency'));
 				o.ucisection = s.section;
 
-				if (hwtype == 'mac80211') {
+				if (hwtype == 'mt_dbdc') {
 					o = ss.taboption('general', form.Flag, 'legacy_rates', _('Allow legacy 802.11b rates'), _('Legacy or badly behaving devices may require legacy 802.11b rates to interoperate. Airtime efficiency may be significantly reduced where these are used. It is recommended to not allow 802.11b rates where possible.'));
 
 					o = ss.taboption('general', CBIWifiTxPowerValue, 'txpower', _('Maximum transmit power'), _('Specifies the maximum transmit power the wireless radio may use. Depending on regulatory requirements and wireless usage, the actual transmit power may be reduced by the driver.'));
@@ -1008,5 +1008,5 @@
 				};
 
-				if (hwtype == 'mac80211') {
+				if (hwtype == 'mt_dbdc') {
 					// Probe 802.11k support
 					o = ss.taboption('encryption', form.Flag, 'ieee80211k', _('802.11k'), _('Enables The 802.11k standard provides information to discover the best available access point'));
@@ -1180,137 +1180,9 @@ return view.extend({
 
 				var crypto_modes = [];
 
-				if (hwtype == 'mac80211') {
-					var has_supplicant = L.hasSystemFeature('wpasupplicant'),
-					    has_hostapd = L.hasSystemFeature('hostapd');
-
-					// Probe EAP support
-					var has_ap_eap = L.hasSystemFeature('hostapd', 'eap'),
-					    has_sta_eap = L.hasSystemFeature('wpasupplicant', 'eap');
-
-					// Probe SAE support
-					var has_ap_sae = L.hasSystemFeature('hostapd', 'sae'),
-					    has_sta_sae = L.hasSystemFeature('wpasupplicant', 'sae');
-
-					// Probe OWE support
-					var has_ap_owe = L.hasSystemFeature('hostapd', 'owe'),
-					    has_sta_owe = L.hasSystemFeature('wpasupplicant', 'owe');
-
-					// Probe Suite-B support
-					var has_ap_eap192 = L.hasSystemFeature('hostapd', 'suiteb192'),
-					    has_sta_eap192 = L.hasSystemFeature('wpasupplicant', 'suiteb192');
-
-					// Probe WEP support
-					var has_ap_wep = L.hasSystemFeature('hostapd', 'wep'),
-					    has_sta_wep = L.hasSystemFeature('wpasupplicant', 'wep');
-
-					if (has_hostapd || has_supplicant) {
-						crypto_modes.push(['psk2',      'WPA2-PSK',                    35]);
-						crypto_modes.push(['psk-mixed', 'WPA-PSK/WPA2-PSK Mixed Mode', 22]);
-						crypto_modes.push(['psk',       'WPA-PSK',                     21]);
-					}
-					else {
-						encr.description = _('WPA-Encryption requires wpa_supplicant (for client mode) or hostapd (for AP and ad-hoc mode) to be installed.');
-					}
-
-					if (has_ap_sae || has_sta_sae) {
-						crypto_modes.push(['sae',       'WPA3-SAE',                     31]);
-						crypto_modes.push(['sae-mixed', 'WPA2-PSK/WPA3-SAE Mixed Mode', 30]);
-					}
-
-					if (has_ap_wep || has_sta_wep) {
-						crypto_modes.push(['wep-open',   _('WEP Open System'), 11]);
-						crypto_modes.push(['wep-shared', _('WEP Shared Key'),  10]);
-					}
-
-					if (has_ap_eap || has_sta_eap) {
-						if (has_ap_eap192 || has_sta_eap192) {
-							crypto_modes.push(['wpa3', 'WPA3-EAP', 33]);
-							crypto_modes.push(['wpa3-mixed', 'WPA2-EAP/WPA3-EAP Mixed Mode', 32]);
-						}
-
-						crypto_modes.push(['wpa2', 'WPA2-EAP', 34]);
-						crypto_modes.push(['wpa',  'WPA-EAP',  20]);
-					}
-
-					if (has_ap_owe || has_sta_owe) {
-						crypto_modes.push(['owe', 'OWE', 1]);
-					}
-
-					encr.crypto_support = {
-						'ap': {
-							'wep-open': has_ap_wep || _('Requires hostapd with WEP support'),
-							'wep-shared': has_ap_wep || _('Requires hostapd with WEP support'),
-							'psk': has_hostapd || _('Requires hostapd'),
-							'psk2': has_hostapd || _('Requires hostapd'),
-							'psk-mixed': has_hostapd || _('Requires hostapd'),
-							'sae': has_ap_sae || _('Requires hostapd with SAE support'),
-							'sae-mixed': has_ap_sae || _('Requires hostapd with SAE support'),
-							'wpa': has_ap_eap || _('Requires hostapd with EAP support'),
-							'wpa2': has_ap_eap || _('Requires hostapd with EAP support'),
-							'wpa3': has_ap_eap192 || _('Requires hostapd with EAP Suite-B support'),
-							'wpa3-mixed': has_ap_eap192 || _('Requires hostapd with EAP Suite-B support'),
-							'owe': has_ap_owe || _('Requires hostapd with OWE support')
-						},
-						'sta': {
-							'wep-open': has_sta_wep || _('Requires wpa-supplicant with WEP support'),
-							'wep-shared': has_sta_wep || _('Requires wpa-supplicant with WEP support'),
-							'psk': has_supplicant || _('Requires wpa-supplicant'),
-							'psk2': has_supplicant || _('Requires wpa-supplicant'),
-							'psk-mixed': has_supplicant || _('Requires wpa-supplicant'),
-							'sae': has_sta_sae || _('Requires wpa-supplicant with SAE support'),
-							'sae-mixed': has_sta_sae || _('Requires wpa-supplicant with SAE support'),
-							'wpa': has_sta_eap || _('Requires wpa-supplicant with EAP support'),
-							'wpa2': has_sta_eap || _('Requires wpa-supplicant with EAP support'),
-							'wpa3': has_sta_eap192 || _('Requires wpa-supplicant with EAP Suite-B support'),
-							'wpa3-mixed': has_sta_eap192 || _('Requires wpa-supplicant with EAP Suite-B support'),
-							'owe': has_sta_owe || _('Requires wpa-supplicant with OWE support')
-						},
-						'adhoc': {
-							'wep-open': true,
-							'wep-shared': true,
-							'psk': has_supplicant || _('Requires wpa-supplicant'),
-							'psk2': has_supplicant || _('Requires wpa-supplicant'),
-							'psk-mixed': has_supplicant || _('Requires wpa-supplicant'),
-						},
-						'mesh': {
-							'sae': has_sta_sae || _('Requires wpa-supplicant with SAE support')
-						},
-						'ahdemo': {
-							'wep-open': true,
-							'wep-shared': true
-						},
-						'wds': {
-							'wep-open': true,
-							'wep-shared': true
-						}
-					};
-
-					encr.crypto_support['ap-wds'] = encr.crypto_support['ap'];
-					encr.crypto_support['sta-wds'] = encr.crypto_support['sta'];
-
-					encr.validate = function(section_id, value) {
-						var modeopt = this.section.children.filter(function(o) { return o.option == 'mode' })[0],
-						    modeval = modeopt.formvalue(section_id),
-						    modetitle = modeopt.vallist[modeopt.keylist.indexOf(modeval)],
-						    enctitle = this.vallist[this.keylist.indexOf(value)];
-
-						if (value == 'none')
-							return true;
-
-						if (!L.isObject(this.crypto_support[modeval]) || !this.crypto_support[modeval].hasOwnProperty(value))
-							return _('The selected %s mode is incompatible with %s encryption').format(modetitle, enctitle);
-
-						return this.crypto_support[modeval][value];
-					};
-				}
-				else if (hwtype == 'broadcom') {
-					crypto_modes.push(['psk2',     'WPA2-PSK',                    33]);
-					crypto_modes.push(['psk+psk2', 'WPA-PSK/WPA2-PSK Mixed Mode', 22]);
-					crypto_modes.push(['psk',      'WPA-PSK',                     21]);
-					crypto_modes.push(['wep-open',   _('WEP Open System'),        11]);
-					crypto_modes.push(['wep-shared', _('WEP Shared Key'),         10]);
-				}
+				crypto_modes.push(['psk2',     'WPA2-PSK',                    33]);
+				crypto_modes.push(['psk+psk2', 'WPA-PSK/WPA2-PSK Mixed Mode', 22]);
+				crypto_modes.push(['psk',      'WPA-PSK',                     21]);
 
 				crypto_modes.push(['none',       _('No Encryption'),   0]);
 
@@ -1429,7 +1301,7 @@ return view.extend({
 				}
 
 
-				if (hwtype == 'mac80211') {
+				if (hwtype == 'mt_dbdc') {
 					// Probe 802.11r support (and EAP support as a proxy for Openwrt)
 					var has_80211r = L.hasSystemFeature('hostapd', '11r') || L.hasSystemFeature('hostapd', 'eap');
 
@@ -1606,7 +1478,7 @@ return view.extend({
 					o.password = true;
 
 
-					if (hwtype == 'mac80211') {
+					if (hwtype == 'mt_dbdc') {
 						// ieee802.11w options
 						o = ss.taboption('encryption', form.ListValue, 'ieee80211w', _('802.11w Management Frame Protection'), _("Note: Some wireless drivers do not fully support 802.11w. E.g. mwlwifi may have problems"));
 						o.value('', _('Disabled'));
@@ -1638,21 +1579,6 @@ return view.extend({
 						o.datatype = 'uinteger';
 						o.placeholder = '201';
 						o.rmempty = true;
-
-						o = ss.taboption('encryption', form.Flag, 'wpa_disable_eapol_key_retries', _('Enable key reinstallation (KRACK) countermeasures'), _('Complicates key reinstallation attacks on the client side by disabling retransmission of EAPOL-Key frames that are used to install keys. This workaround might cause interoperability issues and reduced robustness of key negotiation especially in environments with heavy traffic load.'));
-						add_dependency_permutations(o, { mode: ['ap', 'ap-wds'], encryption: ['psk2', 'psk-mixed', 'sae', 'sae-mixed', 'wpa2', 'wpa3', 'wpa3-mixed'] });
-
-						if (L.hasSystemFeature('hostapd', 'wps') && L.hasSystemFeature('wpasupplicant')) {
-							o = ss.taboption('encryption', form.Flag, 'wps_pushbutton', _('Enable WPS pushbutton, requires WPA(2)-PSK/WPA3-SAE'))
-							o.enabled = '1';
-							o.disabled = '0';
-							o.default = o.disabled;
-							o.depends('encryption', 'psk');
-							o.depends('encryption', 'psk2');
-							o.depends('encryption', 'psk-mixed');
-							o.depends('encryption', 'sae');
-							o.depends('encryption', 'sae-mixed');
-						}
 					}
 				}
 			});
