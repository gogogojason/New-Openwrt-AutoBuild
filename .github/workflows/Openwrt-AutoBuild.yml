#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: 19.07OpenWrt

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'


# ÂÆöÊó∂Ëß¶ÂèëÁºñËØë(ÊØèÂ§©Êó©5ÁÇπ)
#  schedule:
#    - cron: 0 20 * * *


# ÁÇπËµû‚òÜStarËß¶ÂèëÁºñËØë
#  watch:
#    types: [started]

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  SCKEY: ${{ secrets.SCKEY }}
  TZ: Asia/Shanghai
  GITHUB_RELEASE: https://github.com/gogogojason/OpenWrt-AutoBuild/releases
  
jobs:
  build:
    runs-on: Ubuntu-20.04
    
    name: ÁºñËØë ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [All_RM2100,Sim_RM2100,Ap_RM2100]  #[Lean_x86_64,All_RM2100,Sim_RM2100,Ap_RM2100,Lienol_x86_64,]
        
    steps:
    - name: ÂáÜÂ§áÂÆåÊàê
      uses: actions/checkout@main
  
    - name: Âä†ËΩΩËÆæÁΩÆÊñá‰ª∂
      run: |
        source "${GITHUB_WORKSPACE}/devices/common/settings.ini"
        if [ -f "devices/${{matrix.target}}/settings.ini" ]; then
          source "${GITHUB_WORKSPACE}/devices/${{matrix.target}}/settings.ini"
        fi
        echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
        echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
        echo "CONFIG_FILE=${CONFIG_FILE}" >> $GITHUB_ENV
        echo "DIY_SH=${DIY_SH}" >> $GITHUB_ENV
        echo "FREE_UP_DISK=${FREE_UP_DISK}" >> $GITHUB_ENV
        echo "UPLOAD_BIN_DIR_FOR_ARTIFACT=${UPLOAD_BIN_DIR_FOR_ARTIFACT}" >> $GITHUB_ENV
        echo "WXFB_MESSAGE=${WXFB_MESSAGE}" >> $GITHUB_ENV
        echo "SSH_ACTIONS=${SSH_ACTIONS}" >> $GITHUB_ENV
        echo "UPLOAD_FIRMWARE=${UPLOAD_FIRMWARE}" >> $GITHUB_ENV
        echo "UPLOAD_IPK=${UPLOAD_IPK}" >> $GITHUB_ENV
        echo "UPLOAD_COWTRANSFER=${UPLOAD_COWTRANSFER}" >> $GITHUB_ENV
        echo "UPLOAD_WETRANSFER=${UPLOAD_WETRANSFER}" >> $GITHUB_ENV
        echo "UPLOAD_RELEASE=${UPLOAD_RELEASE}" >> $GITHUB_ENV
        echo "SERVERCHAN_SCKEY=${SERVERCHAN_SCKEY}" >> $GITHUB_ENV
        echo "UPLOAD_MYPAN=${UPLOAD_MYPAN}" >> $GITHUB_ENV
        
    - name: Êõ¥Êñ∞ÂÖãÈöÜÊèí‰ª∂ÂåÖ
      if: github.event.repository.owner.id == '48883331'
      run: |
        curl -X POST https://api.github.com/repos/garypang13/openwrt-packages/dispatches \
        -H "Accept: application/vnd.github.everest-preview+json" \
        -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
        --data '{"event_type": "update"}'
         
    - name: ÂºÄÂßãÂÆâË£ÖÁºñËØëÊâÄÈúÄÁ≥ªÁªü
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential libpam libnetsnmp liblzma asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename antlr3 gperf wget curl swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
    
    - name: Êõ¥Êñ∞Êó∂Âå∫„ÄÅÁºñËØëÊó∂Èó¥
      id: date
      run: |
        echo "::set-output name=status::success"
        echo "FILE_DATE=$(date +"%m-%d %H.%M")" >> $GITHUB_ENV
        echo "FILE_DATE1=$(date "+%YÂπ¥%mÊúà%dÂè∑-%HÁÇπ%MÂàÜ")" >> $GITHUB_ENV
        echo "FILE_DATE2=$(date "+%Y%m%d-%H%M")" >> $GITHUB_ENV
        echo "FILE_DATE3=$(date "+%Y%m%d")" >> $GITHUB_ENV
        echo "FILE_DATE4=$(date "+%m.%d")" >> $GITHUB_ENV
        echo "date=$(date +'%m/%d_%Y_%H/%M')" >> $GITHUB_ENV
        echo "date2=$(date +'%m/%d %Y')" >> $GITHUB_ENV
        echo "date3=$(date +'%m.%d')" >> $GITHUB_ENV
        echo "date4=$(date +'%m.%d.%Y')" >> $GITHUB_ENV
        
    - name: Âä†ËΩΩopenwrtÊ∫ê
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
      
    - name: ÈáäÊîæÁ£ÅÁõòÁ©∫Èó¥
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/dl /mnt/openwrt/staging_dir
        ln -sf /mnt/openwrt/dl openwrt/dl
        ln -sf /mnt/openwrt/staging_dir openwrt/staging_dir
        
    - name: Â∫îÁî®Ëá™ÂÆö‰πâÊñá‰ª∂
      run: |
        cp -rf devices/common/* openwrt/
        cp -rf devices/${{matrix.target}}/* openwrt/
        cd openwrt
        ./scripts/feeds update -a
        
    - name: Âä†ËΩΩÈÖçÁΩÆÊñá‰ª∂
      run: |
        cp -rf devices openwrt/
        cd openwrt
        chmod +x devices/common/$DIY_SH
        /bin/bash "devices/common/$DIY_SH"
        cp -Rf ./diy/* ./
        if [ -f "devices/${{matrix.target}}/$DIY_SH" ]; then
          chmod +x devices/${{matrix.target}}/$DIY_SH
          /bin/bash "devices/${{matrix.target}}/$DIY_SH"
        fi
        cp -f devices/common/default-settings package/*/*/default-settings/root/etc/uci-defaults/99-default-settings
        if [ -f "devices/${{matrix.target}}/default-settings" ]; then
          echo >> package/*/*/default-settings/root/etc/uci-defaults/99-default-settings
          cat devices/${{matrix.target}}/default-settings >> package/*/*/default-settings/root/etc/uci-defaults/99-default-settings
        fi
        mv devices/common/$CONFIG_FILE .config
        if [ -f "devices/${{matrix.target}}/$CONFIG_FILE" ]; then
          echo >> .config
          cat devices/${{matrix.target}}/$CONFIG_FILE >> .config
        fi
        
    - name: ÊâìË°•‰∏Å
      run: |
        cd openwrt
        find "devices/common/patches" -type f ! -path 'devices/common/patches/china_mirrors.patch' -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch"
        if [ -n "$(ls -A "devices/${{matrix.target}}/patches" 2>/dev/null)" ]; then
          find "devices/${{matrix.target}}/patches" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch"
        fi  
        
        echo "‰øÆÊîπÂú∞ÂùÄ"
        sed -i 's/firmware\/redmi-ac2100/firmware\/${{matrix.target}}/g' feeds/custom/luci-app-gpsysupgrade/root/usr/bin/upgrade.lua
        sed -i 's/firmware\/redmi-ac2100/firmware\/${{matrix.target}}/g' feeds/custom/luci-app-gpsysupgrade/luasrc/model/cbi/gpsysupgrade/sysupgrade.lua
        
    - name: Ê£ÄÊü•Á©∫Èó¥‰ΩøÁî®ÊÉÖÂÜµ
      run: |
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -hT
        echo "======================="
        du -h --max-depth=1 openwrt/ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 openwrt/feeds/custom
        
    - name: SSHËøúÁ®ãËøûÊé•ÊúçÂä°Âô®ÈÖçÁΩÆÂõ∫‰ª∂
      uses: garypang13/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || (github.event.inputs.ssh == 'ssh' && github.event.inputs.ssh  != 'false')

    - name: ‰∏ãËΩΩËΩØ‰ª∂ÂåÖ
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: ÂºÄÂßãÁºñËØëÂõ∫‰ª∂
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 V=s
        echo "::set-output name=status::success"
      
    - name: ‰∏ä‰º†binÊñá‰ª∂
      uses: actions/upload-artifact@main
      if: env.UPLOAD_BIN_DIR_FOR_ARTIFACT == 'true'
      with:
        name: OpenWrt_bin_${{matrix.target}}
        path: openwrt/bin

    - name: Êï¥ÁêÜÂõ∫‰ª∂
      id: organize
      run: |
        mkdir -p ./artifact/package
        rm -rf $(find openwrt/bin/targets/ -type d -name "packages")
        cp -rf openwrt/bin/packages/ ./artifact/package/
        mkdir firmware && find openwrt/bin/targets/*/*/ -maxdepth 1 \
        -name "*combined*" \
        -or -name "*sysupgrade*" \
        -or -name "*armvirt-64-default-rootfs*" \
        -or -name "sha256sums" \
        | xargs -i mv -f {} ./firmware/
        cp openwrt/.config  ./firmware/${{matrix.target}}.config
        cd firmware
        echo ${{ env.date4 }} > version.txt
        mv sha256sums ${{matrix.target}}_sha256sums
        rename -v "s/^openwrt/${{ env.date3 }}-openwrt/" *
        rename -v "s/xiaomi_redmi-router/redmi/" *bin
        rename -v "s/-d-team//" *bin
        rename -v "s/friendlyarm_nanopi-r2s/nanopi-r2s/" *gz
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        Emoji=("üéâ" "ü§û" "‚ú®" "üéÅ" "üéà" "üéÑ" "üé®" "üíã" "üçì" "üçï" "üçâ" "üíê" "üå¥" "üöÄ" "üõ∏" "üóΩ" "‚õÖ" "üåà" "üî•" "‚õÑ" "üê∂" "üèÖ" "ü¶Ñ" "üê§")
        RANDOM=$$$(date +%s)
        rand=$[$RANDOM % ${#Emoji[@]}]
        echo "EMOJI=${Emoji[$rand]}" >> $GITHUB_ENV
        if [ ${{matrix.target}} == "phicomm-k2p" ]; then
        echo "NOTICE=Âà∑Êú∫Êó∂breedÈáåÁöÑÈó™Â≠òÂ∏ÉÂ±ÄËØ∑ÈÄâÊã©ÊñêËÆØËÄåÈùûÈªòËÆ§ÁöÑÂÖ¨Áâà" >> $GITHUB_ENV
        elif [ ${{matrix.target}} == "x86_64" ]; then
        echo "NOTICE=ËØ∑ÂàÜÈÖç‰∏çÂ∞ë‰∫é800MÁöÑÂ≠òÂÇ®ÂÆπÈáè" >> $GITHUB_ENV
        fi
        
    - name: ‰∏ä‰º†Âõ∫‰ª∂Êñá‰ª∂
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_firmware_${{matrix.target}}_${{ env.FILE_DATE }}
        path: ./firmware/

    - name: ‰∏ä‰º†Êèí‰ª∂ÂåÖÊñá‰ª∂
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_IPK == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_package_${{matrix.target}}_${{ env.FILE_DATE }}
        path: ./artifact/package/    
      
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞Â•∂ÁâõÂø´‰º†
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ./firmware/ 2>&1 | tee cowtransfer.log
        echo "::warning file=Â•∂ÁâõÂø´‰º†Ôºà${{matrix.target}}Ôºâ::$(cat cowtransfer.log | grep https)"
        
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞ WeTransfer
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ./firmware/ 2>&1 | tee wetransfer.log
        echo "::warning file=WeTransferÔºà${{matrix.target}}Ôºâ::$(cat wetransfer.log | grep https)"
        
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞ÁΩëÁõò
      uses: AEnterprise/rsync-deploy@v1.0 
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_MYPAN == 'true'
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }} 
        ARGS: -avzr --exclude=
        SERVER_PORT: ${{ secrets.SERVER_PORT }}
        FOLDER: ./firmware/
        SERVER_IP: ${{ secrets.SSH_HOST }} 
        USERNAME: ${{ secrets.SSH_USERNAME }} 
        SERVER_DESTINATION: ${{ secrets.SERVER_DESTINATION }}${{matrix.target}}/
   
    - name: ËøõÂÖ•ÁõÆÂΩïÂà†Èô§
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_MYPAN == 'true'
      run: |
         cd /home/runner/work/_temp/_github_home/
         sudo rm -rf .ssh
         
    - name: ‰∏ä‰º†PackagesÂà∞ÁΩëÁõò
      uses: AEnterprise/rsync-deploy@v1.0 
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_MYPAN == 'true'
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }} 
        ARGS: -avz --delete --exclude='*.pyc'
        SERVER_PORT: ${{ secrets.SERVER_PORT }}
        FOLDER: ./artifact/package/
        SERVER_IP: ${{ secrets.SSH_HOST }} 
        USERNAME: ${{ secrets.SSH_USERNAME }} 
        SERVER_DESTINATION: ${{ secrets.SERVER_DESTINATION }}Packages/
 
    - name: ÊèêÂèñÂèëÂ∏ÉÁî®ÁöÑ„ÄåÂ•∂ÁâõÂø´‰º†„ÄçÂíå„ÄåWeTransfer„ÄçÁöÑÈìæÊé•
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ./firmware/ 2>&1 | tee cowtransfer.log
        echo "COWTRANSFER_URL=$(cat cowtransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV 
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ./firmware/ 2>&1 | tee wetransfer.log
        echo "WETRANSFER_URL=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV 
        
    - name: Ëá™Âä®ÂèëÂ∏ÉÂõ∫‰ª∂Âà∞ Releases
      uses: softprops/action-gh-release@v1
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        name: ${{ env.WXFB_MESSAGE }}
        tag_name: ${{ env.FILE_DATE2 }}-${{matrix.target}}
        body: |            
            ‚òÖ  Êó∂Èó¥ : ${{ env.FILE_DATE1 }} 
            ‚òÖ  ÂàÜÊîØ : ${{ env.REPO_BRANCH }}
            ‚òÖ  Ê∫êÁ†Å : ${{ env.REPO_URL }}            
            È´òÈÄü‰∏ãËΩΩÂú∞ÂùÄÔºö
            ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ
            
            
            ‚û§ Â•∂ÁâõÂø´‰º†Ôºö ${{ env.COWTRANSFER_URL }}
            
            ‚û§ WeTransferÔºö ${{ env.WETRANSFER_URL }}
            
            Ê≥®:ÈìæÊé•ÊúâÊïàÊúü‰∏∫7Â§©ÔºåÊó†ÈúÄÊ≥®ÂÜåÁõ¥Êé•‰∏ãËΩΩ.
            
            ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ
            
        files: ./firmware/*
        
    - name: ÂÆåÊàêÁºñËØëÂæÆ‰ø°ÈÄöÁü•
      uses: emon100/Action-Serverchan@v2
      if: steps.organizer.outputs.status == 'success' && env.SERVERCHAN_SCKEY == 'true'
      with:
        SCKEY: ${{ secrets.WEIXIN_SCKEY }}
        text: ÊÅ≠Âñú${{matrix.target}}Âõ∫‰ª∂ÁºñËØëÊàêÂäüÔºÅ
        desp: ÊÇ®ÁöÑ${{ env.WXFB_MESSAGE }}Âõ∫‰ª∂ÊàêÂäüÁºñËØëÂÆåÊàê‰∫ÜÔºÅ

              
              ÂÆåÊàêÊó∂Èó¥Ôºö${{ env.FILE_DATE1 }}
              
              
              ÂèëÂ∏ÉÂú∞ÂùÄÔºö${{ env.GITHUB_RELEASE }}
              
              
              Â•∂ÁâõÂø´‰º†Ôºö${{ env.COWTRANSFER_URL }}
              
              
              WeTransferÔºö${{ env.WETRANSFER_URL }}
              
              
              Âõ∫‰ª∂Â∑≤ÁªèÁºñËØëÂÆåÊàê üéàÔºÅÔºÅÔºÅ
